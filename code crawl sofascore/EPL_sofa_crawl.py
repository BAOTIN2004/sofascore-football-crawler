import time
import pandas as pd
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from bs4 import BeautifulSoup

# üü¢ **Kh·ªüi t·∫°o tr√¨nh duy·ªát Selenium**
driver = webdriver.Chrome()
url = "https://www.sofascore.com/tournament/football/england/premier-league/17#id:61627"
driver.get(url)

# ƒê·ª£i trang t·∫£i ho√†n to√†n
time.sleep(5)

# ‚úÖ **Ch·ªçn m√πa gi·∫£i**
try:
    season_dropdown_xpath = '//*[@id="__next"]/main/div/div[3]/div/div[1]/div[1]/div[1]/div[1]/div[2]/div[2]/div[1]/div/div[2]/div/div/div/div/button'
    WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, season_dropdown_xpath))).click()
    time.sleep(2)

    season_elements = WebDriverWait(driver, 10).until(
        EC.presence_of_all_elements_located((By.XPATH, '//*[@id="__next"]/main/div/div[3]/div/div[1]/div[1]/div[1]/div[1]/div[2]/div[2]/div[1]/div/div[2]/div/div/div/div/div/div/div[1]/div/ul/li'))
    )

    seasons = [season.text for season in season_elements if season.text.strip() != ""]
    print("üìú Danh s√°ch m√πa gi·∫£i:", seasons)
except:
    print("‚ö†Ô∏è Kh√¥ng th·ªÉ l·∫•y danh s√°ch m√πa gi·∫£i!")
    driver.quit()
    exit()

# üü¢ **Duy·ªát t·ª´ng m√πa gi·∫£i ƒë·ªÉ crawl**
all_players_data = []

for i in range(len(seasons)):
    try:
        # M·ªü l·∫°i dropdown
        WebDriverWait(driver, 10).until(EC.element_to_be_clickable((By.XPATH, season_dropdown_xpath))).click()
        time.sleep(2)

        # Ch·ªçn m√πa gi·∫£i
        season_xpath = f'//*[@id="__next"]/main/div/div[3]/div/div[1]/div[1]/div[1]/div[1]/div[2]/div[2]/div[1]/div/div[2]/div/div/div/div/div/div/div[1]/div/ul/li[{i+1}]'
        season_element = WebDriverWait(driver, 10).until(
            EC.element_to_be_clickable((By.XPATH, season_xpath))
        )
        season_element.click()
        season_name = seasons[i]
        print(f"‚úÖ ƒê√£ ch·ªçn m√πa gi·∫£i: {season_name}")
        time.sleep(3)
        for _ in range(3):
            driver.execute_script("window.scrollBy(0, 1000);")  # Cu·ªôn 100px m·ªói l·∫ßn
            time.sleep(1)  # Ch·ªù d·ªØ li·ªáu t·∫£i th√™m

        # ‚úÖ **Ch·ªù b·∫£ng d·ªØ li·ªáu xu·∫•t hi·ªán**
        try:
            WebDriverWait(driver, 10).until(
                EC.presence_of_element_located((By.CLASS_NAME, "sc-67e6dd27-8"))
            )
            print("‚úÖ B·∫£ng d·ªØ li·ªáu ƒë√£ s·∫µn s√†ng!")
        except:
            print("üö® Kh√¥ng t√¨m th·∫•y b·∫£ng d·ªØ li·ªáu!")
            continue

        time.sleep(3)

        players_data = []
        page = 1

        while True:
            print(f"üìÑ ƒêang l·∫•y d·ªØ li·ªáu m√πa {season_name} - trang {page}...")

            # L·∫•y HTML trang hi·ªán t·∫°i
            soup = BeautifulSoup(driver.page_source, 'html.parser')
            table = soup.find("table", class_="sc-67e6dd27-8 bctIbM")

# N·∫øu c√≥ b·∫£ng th√¨ m·ªõi l·∫•y c·ªôt ti√™u ƒë·ªÅ
            if table:
                header_row = table.find("tr")
                headers = [col.text.strip() for col in header_row.find_all("th")]
                # print("üìå Ti√™u ƒë·ªÅ c·ªôt th·ª±c t·∫ø:", headers)

    # üü¢ X√°c ƒë·ªãnh v·ªã tr√≠ c√°c c·ªôt c·∫ßn l·∫•y
            col_indexes = {
                "team": headers.index("Team") if "Team" in headers else None,
                "name": headers.index("Name") if "Name" in headers else None,
                "goals": headers.index("Goals") if "Goals" in headers else None,
                "succ_dribbles": headers.index("Succ. dribbles") if "Succ. dribbles" in headers else None,
                "tackles": headers.index("Tackles") if "Tackles" in headers else None,
                "assists": headers.index("Assists") if "Assists" in headers else None,
                "accurate_passes": headers.index("Accurate passes %") if "Accurate passes %" in headers else None,
                "sofa_score": headers.index("Average Sofascore Rating") if "Average Sofascore Rating" in headers else None
        }


            for row in table.find_all("tr")[1:]:
                cols = row.find_all("td")
                
                # üü¢ L·∫•y t√™n ƒë·ªôi t·ª´ ·∫£nh logo
                team_element = cols[col_indexes["team"]].find("img") if col_indexes["team"] is not None else None
                team_name = team_element["alt"].strip() if team_element and "alt" in team_element.attrs else "Kh√¥ng r√µ"

                name = cols[col_indexes["name"]].text.strip() if col_indexes["name"] is not None else "Kh√¥ng r√µ"
                goals = cols[col_indexes["goals"]].text.strip() if col_indexes["goals"] is not None else "0"
                succ_dribbles = cols[col_indexes["succ_dribbles"]].text.strip() if col_indexes["succ_dribbles"] is not None else "0"
                tackles = cols[col_indexes["tackles"]].text.strip() if col_indexes["tackles"] is not None else "0"
                assists = cols[col_indexes["assists"]].text.strip() if col_indexes["assists"] is not None else "0"
                accurate_passes = cols[col_indexes["accurate_passes"]].text.strip() if col_indexes["accurate_passes"] is not None else "0"
                sofa_score = cols[col_indexes["sofa_score"]].text.strip() if col_indexes["sofa_score"] is not None else "N/A"
    
                players_data.append((season_name, team_name, name, goals, succ_dribbles, tackles, assists, accurate_passes, sofa_score))

            # ‚úÖ **T√¨m v√† click n√∫t "Next" ƒë·ªÉ chuy·ªÉn trang**
            try:
                next_button_xpath = '//*[@id="__next"]/main/div/div[3]/div/div[1]/div[1]/div[5]/div/div[4]/div/div/button[2]'
                next_button = WebDriverWait(driver, 5).until(
                    EC.element_to_be_clickable((By.XPATH, next_button_xpath))
                )
                if "disabled" in next_button.get_attribute("class"):
                    print("üö´ N√∫t 'Next' b·ªã v√¥ hi·ªáu h√≥a. K·∫øt th√∫c m√πa!")
                    break

                print(f"‚û°Ô∏è ƒêang chuy·ªÉn sang trang {page + 1}...")
                driver.execute_script("arguments[0].click();", next_button)
                time.sleep(5)
                page += 1
            except:
                print("üö´ Kh√¥ng t√¨m th·∫•y ho·∫∑c kh√¥ng th·ªÉ nh·∫•n n√∫t ti·∫øp t·ª•c. K·∫øt th√∫c m√πa!")
                break
            driver.execute_script("window.scrollTo(0, 0);")
            time.sleep(1)
        all_players_data.extend(players_data)

    except Exception as e:
        print(f"‚ö†Ô∏è L·ªói khi crawl m√πa {seasons[i]}: {e}")
        continue

# ‚úÖ **ƒê√≥ng tr√¨nh duy·ªát**
driver.quit()

# ‚úÖ **L∆∞u v√†o DataFrame**
df = pd.DataFrame(all_players_data, columns=[
    'M√πa gi·∫£i', 'T√™n ƒë·ªôi', 'T√™n c·∫ßu th·ªß', 'S·ªë b√†n th·∫Øng', 'S·ªë pha r√™ b√≥ng th√†nh c√¥ng', 
    'S·ªë pha t·∫Øc b√≥ng', 'S·ªë pha ki·∫øn t·∫°o', 'T·ªâ l·ªá chuy·ªÅn ch√≠nh x√°c', 'ƒêi·ªÉm TB (SofaScore)'
])

# ‚úÖ **Xu·∫•t file CSV**
df.to_csv("121233all_premier_league.csv", index=False, encoding='utf-8-sig')
print("‚úÖ D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c l∆∞u v√†o sofascore_premier_league.csv! üéâ")